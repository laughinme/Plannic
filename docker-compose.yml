services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: backend
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - backend

  bot:
    build:
      context: .
      dockerfile: ./bot/Dockerfile
    container_name: bot
    env_file:
      - ./bot/.env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db
      - redis
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis_service
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "plannic"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data: