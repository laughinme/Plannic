"""preload lesson_emojis table

Revision ID: bf95742b900b
Revises: 0b529b8d1265
Create Date: 2025-04-08 12:37:09.009529

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf95742b900b'
down_revision: Union[str, None] = '0b529b8d1265'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    
    emojis = {
        ' виртуальная реальность': 'виртуальная реальность 🔍',
        'Алгебра': 'Алгебра 📐',
        'Алгоритмы решения экономических задач': 'Алгоритмы решения экономических задач 🔍',
        'БАС': 'БАС 🔍',
        'Биология': 'Биология 🧬',
        'Вероятность и статистика': 'Вероятность и статистика 📈',
        'География': 'География 🌍',
        'География НСО': 'География НСО 🏛️',
        'Геометрия': 'Геометрия 📊',
        'Занимательное черчение': 'Занимательное черчение 🎵',
        'Избранные вопросы математики (алгебра)': 'Избранные вопросы математики (алгебра) ➗',
        'Избранные вопрсы математики (геометрия)': 'Избранные вопрсы математики (геометрия) 📐',
        'Изо': 'Изо 🎨',
        'Ин.яз': 'Ин.яз 🔍',
        'Индивидуальный проект': 'Индивидуальный проект 🎒',
        'Инженер авиастроительного профиля': 'Инженер авиастроительного профиля 🌡️',
        'Инженерная графика': 'Инженерная графика 💻',
        'ИнфоКУРС': 'ИнфоКУРС 🎓',
        'Информатика': 'Информатика 🧠',
        'Искусство': 'Искусство 🎨',
        'История': 'История 🧑‍🤝‍🧑',
        'ИТ экономика': 'ИТ экономика 📈',
        'Классный час': 'Классный час 🔍',
        'Консультация': 'Консультация 🧭',
        'КП по математике': 'КП по математике 📊',
        'Литература': 'Литература 🈶',
        'Литературное чтениечтение': 'Литературное чтениечтение 📚',
        'Математика': 'Математика ➕',
        'Методы решения физических задач': 'Методы решения физических задач 🎒',
        'Музыка': 'Музыка 🎵',
        'Навигационная астрономия': 'Навигационная астрономия 🧬',
        'Наглядная геометрия': 'Наглядная геометрия 📐',
        'Наш край Сибирь': 'Наш край Сибирь 🧑‍🤝‍🧑',
        'ОБЗР': 'ОБЗР 🎓',
        'Обществознание': 'Обществознание 🧑‍🤝‍🧑',
        'ОДНК НР': 'ОДНК НР 🎓',
        'Окружающий мир': 'Окружающий мир 🎓',
        'Олимпиадная астрономия': 'Олимпиадная астрономия 🔬',
        'Олимпиадная математика': 'Олимпиадная математика 📐',
        'Олимпиадная экономика': 'Олимпиадная экономика 📈',
        'ОЛиСК': 'ОЛиСК 🎒',
        'ОРКСЭ': 'ОРКСЭ 🎓',
        'Основы 3Д модедирования': 'Основы 3Д модедирования 🔍',
        'Основы авиамоделирования': 'Основы авиамоделирования 🔍',
        'Основы технопредпринимательства': 'Основы технопредпринимательства 🧠',
        'Основы финансовой грамотности': 'Основы финансовой грамотности 🏦',
        'практикум по хими': 'практикум по хими 🔬',
        'Практическая биология': 'Практическая биология 🌡️',
        'Предпрофильная подготовка': 'Предпрофильная подготовка 🎒',
        'Программирование': 'Программирование 🖥️',
        'Программирование Кумир': 'Программирование Кумир 💻',
        'Программирование на Python': 'Программирование на Python 🖥️',
        'Программирование.Практика': 'Программирование.Практика 🧠',
        'Прогрммирование на Python': 'Прогрммирование на Python 🧭',
        'Психология': 'Психология 🧭',
        'Разговор о важном': 'Разговор о важном 🎒',
        'Решение нестандартных задач по физике': 'Решение нестандартных задач по физике 🧬',
        'Решение олимпиадных задач': 'Решение олимпиадных задач 🧭',
        'Решение олимпиадных задач по астрономии': 'Решение олимпиадных задач по астрономии 🔬',
        'Риторика': 'Риторика 🈶',
        'Русский язык': 'Русский язык 📚',
        'Сложные задачи ЕГЭ': 'Сложные задачи ЕГЭ 🎓',
        'Спец курс по экономике': 'Спец курс по экономике 💰',
        'Стратегия смыслового чтения': 'Стратегия смыслового чтения 🎒',
        'Теория вероятностей': 'Теория вероятностей 🎓',
        'Технический английский': 'Технический английский 📝',
        'Труд(технология)': 'Труд(технология) 💻',
        'Физика': 'Физика 🧬',
        'Физика вокруг нас': 'Физика вокруг нас 🌡️',
        'Физика лаб': 'Физика лаб 🧬',
        'Физкультура': 'Физкультура 🏋️',
        'финансовая грамотность': 'финансовая грамотность 📉',
        'Химия': 'Химия 🔬',
        'Химия от теории к практике': 'Химия от теории к практике 🔬',
        'Химия практика': 'Химия практика 🌡️',
        'Экономика': 'Экономика 📈',
        'Экспериментальная физика': 'Экспериментальная физика 🧪',
        'Элементы математической логики': 'Элементы математической логики ➕',
        'Юные естествоиспытатели': 'Юные естествоиспытатели 🧪',
        'Японский язык': 'Японский язык 📝',
        'УПК': 'УПК 🎒',
        'Бассейн': 'Бассейн ⚽',
        'Театр': 'Театр 🖌️',
        'Обед': 'Обед 🔍',
        'Экскурсия': 'Экскурсия 🎒'
    }
    
    for lesson, emoji in emojis.items():
        op.execute(
            sa.text("INSERT INTO lesson_emojis (name, emoji) VALUES (:n, :e)")
            .bindparams(n=lesson, e=emoji)
        )


def downgrade() -> None:
    """Downgrade schema."""
    
    op.drop_table('lesson_emojis')
